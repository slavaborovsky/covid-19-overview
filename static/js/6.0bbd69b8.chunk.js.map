{"version":3,"sources":["pages/UsaView/index.jsx"],"names":["a11yProps","index","id","TabPanel","children","tabIndex","activeTabIndex","value","rest","isActiveTab","classes","classNames","className","role","hidden","aria-labelledby","Fragment","UsaView","useState","setActiveTabIndex","tabsRef","useRef","useEffect","window","dispatchEvent","CustomEvent","current","updateIndicator","action","textColor","indicatorColor","centered","onChange","_","nextIndex","aria-label","label"],"mappings":"mNAOA,SAASA,EAAUC,GAClB,MAAO,CACNC,GAAG,kBAAD,OAAoBD,GACtB,gBAAgB,uBAAhB,OAAwCA,IAI1C,IAAME,EAAW,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,SAAiBC,EAA+C,EAAtDJ,MAAwBK,EAA8B,EAArCC,MAA0BC,EAAW,4CAC7EC,EAAcJ,IAAaC,EAC3BI,EAAUC,IAAW,YAAaF,EAAc,gBAAkB,MACxE,OACC,uCACCG,UAAWF,EACXG,KAAK,WACLC,QAAwB,IAAhBL,EACRP,GAAE,6BAAwBG,GAC1BU,kBAAA,uBAAiCV,IAC7BG,GAEHC,GAAe,kBAAC,IAAMO,SAAP,KAAiBZ,KA+CrBa,UA1CC,WAAO,IAAD,EACuBC,mBAAS,GADhC,mBACdZ,EADc,KACEa,EADF,KAEfC,EAAUC,mBAchB,OARAC,qBAAU,WAETC,OAAOC,cAAc,IAAIC,YAAY,WACjCL,EAAQM,SACXN,EAAQM,QAAQC,oBAEf,CAACrB,IAGH,yBAAKM,UAAU,oDACd,yBAAKA,UAAU,YACd,kBAAC,IAAD,CACCgB,OAAQR,EACRb,MAAOD,EACPuB,UAAU,UACVC,eAAe,UACfC,UAAU,EACVC,SArBoB,SAACC,EAAGC,GAC3Bf,EAAkBe,IAqBfC,aAAW,qBAEX,kBAAC,IAAD,eAAKC,MAAM,YAAepC,EAAU,KACpC,kBAAC,IAAD,eAAKoC,MAAM,WAAcpC,EAAU,OAGrC,kBAACG,EAAD,CAAUI,MAAOD,EAAgBL,MAAO,GACvC,kBAAC,IAAD,OAED,kBAACE,EAAD,CAAUI,MAAOD,EAAgBL,MAAO,GACvC,kBAAC,IAAD","file":"static/js/6.0bbd69b8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { USADailyChart, USAMapChart } from '../../components';\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid: `world-info-tab-${index}`,\n\t\t'aria-controls': `world-info-tabpanel-${index}`,\n\t};\n}\n\nconst TabPanel = ({ children, index: tabIndex, value: activeTabIndex, ...rest }) => {\n\tconst isActiveTab = tabIndex === activeTabIndex;\n\tconst classes = classNames('flex-auto', isActiveTab ? 'flex flex-col' : null);\n\treturn (\n\t\t<div\n\t\t\tclassName={classes}\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={isActiveTab === false}\n\t\t\tid={`usa-info-tab-panel-${tabIndex}`}\n\t\t\taria-labelledby={`usa-info-tab-${tabIndex}`}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{isActiveTab && <React.Fragment>{children}</React.Fragment>}\n\t\t</div>\n\t);\n};\n\nconst UsaView = () => {\n\tconst [activeTabIndex, setActiveTabIndex] = useState(0);\n\tconst tabsRef = useRef();\n\n\tconst changeActiveTab = (_, nextIndex) => {\n\t\tsetActiveTabIndex(nextIndex);\n\t};\n\n\tuseEffect(() => {\n\t\t// fix tabs indicator does not reflect active position on lazy/suspense component loaded\n\t\twindow.dispatchEvent(new CustomEvent('resize'));\n\t\tif (tabsRef.current) {\n\t\t\ttabsRef.current.updateIndicator();\n\t\t}\n\t}, [activeTabIndex]);\n\n\treturn (\n\t\t<div className=\"flex flex-col flex-auto overflow-auto px-16 py-6\">\n\t\t\t<div className=\"usa-tabs\">\n\t\t\t\t<Tabs\n\t\t\t\t\taction={tabsRef}\n\t\t\t\t\tvalue={activeTabIndex}\n\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\tcentered={true}\n\t\t\t\t\tonChange={changeActiveTab}\n\t\t\t\t\taria-label=\"USA Covid-19 tabs\"\n\t\t\t\t>\n\t\t\t\t\t<Tab label=\"Map View\" {...a11yProps(0)} />\n\t\t\t\t\t<Tab label=\"History\" {...a11yProps(1)} />\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t\t<TabPanel value={activeTabIndex} index={0}>\n\t\t\t\t<USAMapChart />\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={activeTabIndex} index={1}>\n\t\t\t\t<USADailyChart />\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n};\n\nexport default UsaView;\n"],"sourceRoot":""}