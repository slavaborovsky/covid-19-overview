{"version":3,"sources":["utils/custom-hooks/use-query.js","pages/GlobalDashboard/index.jsx"],"names":["useQuery","search","useLocation","URLSearchParams","CustomTextField","withStyles","root","color","opacity","borderBottomColor","TextField","TotalsDashboard","useSWR","totalsData","data","totalsError","error","useCountriesData","countriesData","updatedAt","countriesError","useState","infected","deaths","recovered","searchState","setSearchState","topCount","globalDataError","className","topInfectedCountries","useMemo","sortedByCases","trim","length","filter","c","country","toLowerCase","includes","slice","topDeathsCountries","sortedByDeaths","topRecoveredCountries","sortedByRecovers","renderLastUpdateAt","toLocaleTimeString","toLocaleDateString","renderTopListError","countryLink","iso3","to","header","classes","renderCount","cases","Fragment","start","end","duration","separator","renderList","name","label","fullWidth","helperText","value","onChange","event","target","map","key","todayCases","todayDeaths","critical"],"mappings":"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","file":"static/js/4.dd34b0d1.chunk.js","sourcesContent":["import { useLocation } from 'react-router-dom';\n\nexport const useQuery = () => {\n\tconst { search } = useLocation();\n\treturn new URLSearchParams(search);\n};\n","import React, { useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CountUp from 'react-countup';\nimport useSWR from 'swr';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport { Card, GlobalDailyChart } from '../../components';\nimport { useCountriesData } from '../../utils/custom-hooks';\nimport { withStyles } from '@material-ui/core';\n\nconst CustomTextField = withStyles({\n\troot: {\n\t\t'& .MuiFormLabel-root': {\n\t\t\tcolor: 'var(--covid-default)',\n\t\t\topacity: 0.67,\n\t\t},\n\t\t'& .MuiFormHelperText-root': {\n\t\t\tcolor: 'var(--covid-default)',\n\t\t\topacity: 0.67,\n\t\t},\n\t\t'& .MuiInputBase-root': {\n\t\t\tcolor: 'var(--covid-default)',\n\t\t},\n\t\t'& .MuiInput-underline:before': {\n\t\t\tborderBottomColor: 'var(--covid-default)',\n\t\t},\n\t\t'& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n\t\t\tborderBottomColor: 'var(--covid-default)',\n\t\t},\n\t},\n})(TextField);\n\nconst TotalsDashboard = () => {\n\tconst { data: totalsData, error: totalsError } = useSWR('all');\n\tconst { data: countriesData, updatedAt, error: countriesError } = useCountriesData();\n\n\tconst [searchState, setSearchState] = useState({ infected: '', deaths: '', recovered: '' });\n\n\tconst [topCount] = useState(5);\n\n\tconst globalDataError = <p className=\"text-error text-2xl\">Global data error!</p>;\n\n\tconst topInfectedCountries = useMemo(() => {\n\t\tif (!(countriesData && countriesData.sortedByCases)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!searchState.infected || searchState.infected.trim().length === 0) {\n\t\t\treturn countriesData.sortedByCases.slice(0, topCount);\n\t\t}\n\n\t\treturn countriesData.sortedByCases\n\t\t\t.filter((c) => c.country.toLowerCase().includes(searchState.infected.toLowerCase()))\n\t\t\t.slice(0, topCount);\n\t}, [countriesData, searchState.infected, topCount]);\n\n\tconst topDeathsCountries = useMemo(() => {\n\t\tif (!(countriesData && countriesData.sortedByDeaths)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (searchState.deaths.trim().length === 0) {\n\t\t\treturn countriesData.sortedByDeaths.slice(0, topCount);\n\t\t}\n\n\t\treturn countriesData.sortedByDeaths\n\t\t\t.filter((c) => c.country.toLowerCase().includes(searchState.deaths.toLowerCase()))\n\t\t\t.slice(0, topCount);\n\t}, [countriesData, searchState.deaths, topCount]);\n\n\tconst topRecoveredCountries = useMemo(() => {\n\t\tif (!(countriesData && countriesData.sortedByRecovers)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (searchState.recovered.trim().length === 0) {\n\t\t\treturn countriesData.sortedByRecovers.slice(0, topCount);\n\t\t}\n\n\t\treturn countriesData.sortedByRecovers\n\t\t\t.filter((c) => c.country.toLowerCase().includes(searchState.recovered.toLowerCase()))\n\t\t\t.slice(0, topCount);\n\t}, [countriesData, searchState.recovered, topCount]);\n\n\tconst renderLastUpdateAt = (\n\t\t<p className=\"text-sm opacity-60 text-default mb-1\">\n\t\t\tLast update: {updatedAt.toLocaleTimeString()} {updatedAt.toLocaleDateString()}\n\t\t</p>\n\t);\n\n\tconst renderGlobalConfirmedCases = () => {\n\t\tif (totalsError) {\n\t\t\treturn globalDataError;\n\t\t}\n\n\t\tif (totalsData && totalsData.cases) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<p className=\"text-warning text-2xl\">\n\t\t\t\t\t\t<CountUp start={0} end={totalsData.cases} duration={1.5} separator=\",\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t{renderLastUpdateAt}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\n\t\treturn <p className=\"text-base text-on-card\">Loading cases...</p>;\n\t};\n\n\tconst renderGlobalDeathsCases = () => {\n\t\tif (totalsError) {\n\t\t\treturn globalDataError;\n\t\t}\n\n\t\tif (totalsData && totalsData.deaths) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<p className=\"text-error text-2xl\">\n\t\t\t\t\t\t<CountUp start={0} end={totalsData.deaths} duration={1.5} separator=\",\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t{renderLastUpdateAt}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\n\t\treturn <p className=\"text-base text-on-card\">Loading deaths...</p>;\n\t};\n\n\tconst renderGlobalRecoveredCases = () => {\n\t\tif (totalsError) {\n\t\t\treturn globalDataError;\n\t\t}\n\n\t\tif (totalsData && totalsData.recovered) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<p className=\"text-success text-2xl\">\n\t\t\t\t\t\t<CountUp start={0} end={totalsData.recovered} duration={1.5} separator=\",\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t{renderLastUpdateAt}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\n\t\treturn <p className=\"text-base text-on-card\">Loading recovers...</p>;\n\t};\n\n\tconst renderTopListError = <p className=\"text-error text-base\">Top data list error!</p>;\n\n\tconst countryLink = ({ country, iso3 }) => {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tto={`/countries?iso3=${iso3}`}\n\t\t\t\tclassName=\"text-2xl text-default cursor-pointer hover:underline hover:font-semibold\"\n\t\t\t>\n\t\t\t\t{country}\n\t\t\t</Link>\n\t\t);\n\t};\n\n\tconst renderTopFiveConfirmedCountries = () => {\n\t\tif (countriesError) {\n\t\t\treturn renderTopListError;\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CustomTextField\n\t\t\t\t\tname=\"countrySearch\"\n\t\t\t\t\tlabel=\"Country Name\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\thelperText=\"Type to find a country\"\n\t\t\t\t\tvalue={searchState.infected}\n\t\t\t\t\tonChange={(event) => setSearchState({ ...searchState, infected: event.target.value || '' })}\n\t\t\t\t/>\n\t\t\t\t<List>\n\t\t\t\t\t{topInfectedCountries.map((data) => (\n\t\t\t\t\t\t<ListItem className=\"border shadow-inner border-default px-4 py-2 flex flex-col\" key={data.country}>\n\t\t\t\t\t\t\t{countryLink(data)}\n\t\t\t\t\t\t\t<p className=\"text-center break-all\">\n\t\t\t\t\t\t\t\t<span className=\"text-base text-warning whitespace-no-wrap\">\n\t\t\t\t\t\t\t\t\tTotal: <CountUp start={0} end={data.cases} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"mx-2 text-default\">|</span>\n\t\t\t\t\t\t\t\t<span className=\"text-base text-warning whitespace-no-wrap\">\n\t\t\t\t\t\t\t\t\tToday: <CountUp start={0} end={data.todayCases} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</React.Fragment>\n\t\t);\n\t};\n\n\tconst renderTopFiveDeathsCountries = () => {\n\t\tif (countriesError) {\n\t\t\treturn renderTopListError;\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CustomTextField\n\t\t\t\t\tname=\"countrySearch\"\n\t\t\t\t\tlabel=\"Country Name\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\thelperText=\"Type to find a country\"\n\t\t\t\t\tvalue={searchState.deaths}\n\t\t\t\t\tonChange={(event) => setSearchState({ ...searchState, deaths: event.target.value || '' })}\n\t\t\t\t/>\n\t\t\t\t<List>\n\t\t\t\t\t{topDeathsCountries.map((data) => (\n\t\t\t\t\t\t<ListItem className=\"border shadow-inner border-primary-300 px-4 py-2 flex flex-col\" key={data.country}>\n\t\t\t\t\t\t\t{countryLink(data)}\n\t\t\t\t\t\t\t<p className=\"text-center break-all\">\n\t\t\t\t\t\t\t\t<span className=\"text-base text-error whitespace-no-wrap\">\n\t\t\t\t\t\t\t\t\tTotal: <CountUp start={0} end={data.deaths} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"mx-2 text-default\">|</span>\n\t\t\t\t\t\t\t\t<span className=\"text-base text-error whitespace-no-wrap\">\n\t\t\t\t\t\t\t\t\tToday: <CountUp start={0} end={data.todayDeaths} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</React.Fragment>\n\t\t);\n\t};\n\n\tconst renderTopFiveRecoversCountries = () => {\n\t\tif (countriesError) {\n\t\t\treturn renderTopListError;\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CustomTextField\n\t\t\t\t\tname=\"countrySearch\"\n\t\t\t\t\tlabel=\"Country Name\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\thelperText=\"Type to find a country\"\n\t\t\t\t\tvalue={searchState.recovered}\n\t\t\t\t\tonChange={(event) => setSearchState({ ...searchState, recovered: event.target.value || '' })}\n\t\t\t\t/>\n\t\t\t\t<List>\n\t\t\t\t\t{topRecoveredCountries.map((data) => (\n\t\t\t\t\t\t<ListItem className=\"border shadow-inner border-primary-300 px-4 py-2 flex flex-col\" key={data.country}>\n\t\t\t\t\t\t\t{countryLink(data)}\n\t\t\t\t\t\t\t<p className=\"text-center break-all\">\n\t\t\t\t\t\t\t\t<span className=\"text-base text-success whitespace-no-wrap\">\n\t\t\t\t\t\t\t\t\tTotal: <CountUp start={0} end={data.recovered} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"mx-2 text-default\">|</span>\n\t\t\t\t\t\t\t\t<span className=\"text-base text-error whitespace-no-wrap\">\n\t\t\t\t\t\t\t\t\tCritical: <CountUp start={0} end={data.critical} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</React.Fragment>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"flex-auto overflow-y-auto\">\n\t\t\t<div className=\"grid grid-cols-2 md:grid-cols-4 xl:grid-cols-6 gap-12 xl:gap-16 min-h-full py-12 px-16 text-center\">\n\t\t\t\t<Card header=\"Infected\" classes=\"col-span-2\">\n\t\t\t\t\t{{\n\t\t\t\t\t\trenderCount: renderGlobalConfirmedCases,\n\t\t\t\t\t\trenderList: renderTopFiveConfirmedCountries,\n\t\t\t\t\t}}\n\t\t\t\t</Card>\n\n\t\t\t\t<Card header=\"Deaths\" classes=\"col-span-2\">\n\t\t\t\t\t{{\n\t\t\t\t\t\trenderCount: renderGlobalDeathsCases,\n\t\t\t\t\t\trenderList: renderTopFiveDeathsCountries,\n\t\t\t\t\t}}\n\t\t\t\t</Card>\n\n\t\t\t\t<Card header=\"Recovered\" classes=\"col-span-2 col-start-1 md:col-start-2 xl:col-start-5\">\n\t\t\t\t\t{{\n\t\t\t\t\t\trenderCount: renderGlobalRecoveredCases,\n\t\t\t\t\t\trenderList: renderTopFiveRecoversCountries,\n\t\t\t\t\t}}\n\t\t\t\t</Card>\n\n\t\t\t\t<div className=\"col-span-2 md:col-span-4 xl:col-span-6\">\n\t\t\t\t\t<GlobalDailyChart />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TotalsDashboard;\n"],"sourceRoot":""}